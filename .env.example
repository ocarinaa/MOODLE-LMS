#  Moodle LMS Environment Configuration
# Copy this file to .env and customize for your environment

# ===================================================================
#  SECURITY WARNING
# ===================================================================
# This configuration is for DEVELOPMENT ONLY!
# For PRODUCTION use, set secure passwords and change settings below.

# ===================================================================
#  DATABASE CONFIGURATION
# ===================================================================

# MariaDB Settings
MARIADB_USER=bn_moodle
MARIADB_DATABASE=bitnami_moodle

#  DEVELOPMENT: Empty password allowed (INSECURE!)
ALLOW_EMPTY_PASSWORD=yes

#  PRODUCTION: Uncomment and set secure passwords
# ALLOW_EMPTY_PASSWORD=no
# MARIADB_PASSWORD=YourSecurePasswordHere123!
# MARIADB_ROOT_PASSWORD=YourSecureRootPasswordHere123!

# Database Character Set (UTF8MB4 for international support)
MARIADB_CHARACTER_SET=utf8mb4
MARIADB_COLLATE=utf8mb4_unicode_ci

# ===================================================================
#  MOODLE CONFIGURATION
# ===================================================================

# Moodle Database Connection
MOODLE_DATABASE_TYPE=mariadb
MOODLE_DATABASE_HOST=mariadb
MOODLE_DATABASE_PORT_NUMBER=3306
MOODLE_DATABASE_USER=bn_moodle
MOODLE_DATABASE_NAME=bitnami_moodle

#  DEVELOPMENT: No password required
#  PRODUCTION: Uncomment and match MariaDB password
# MOODLE_DATABASE_PASSWORD=YourSecurePasswordHere123!

# Moodle Site Configuration
MOODLE_HOST=localhost
MOODLE_REVERSEPROXY=no
MOODLE_SSLPROXY=no

#  PRODUCTION: Set your domain
# MOODLE_HOST=your-domain.com
# MOODLE_REVERSEPROXY=yes
# MOODLE_SSLPROXY=yes

# ===================================================================
#  WEB SERVER CONFIGURATION
# ===================================================================

# HTTP/HTTPS Ports
HTTP_PORT=8080
HTTPS_PORT=8443

#  PRODUCTION: Use standard ports with reverse proxy
# HTTP_PORT=80
# HTTPS_PORT=443

# ===================================================================
#  VOLUME CONFIGURATION
# ===================================================================

# Data persistence paths (relative to docker-compose.yml)
MARIADB_DATA_PATH=./data/mariadb
MOODLE_DATA_PATH=./data/moodle
MOODLEDATA_PATH=./data/moodledata

# ===================================================================
#  PERFORMANCE SETTINGS
# ===================================================================

# PHP Configuration
PHP_MEMORY_LIMIT=512M
PHP_MAX_EXECUTION_TIME=300
PHP_UPLOAD_MAX_FILESIZE=256M
PHP_POST_MAX_SIZE=256M

# ===================================================================
#  EMAIL CONFIGURATION (Optional)
# ===================================================================

# SMTP Settings for email notifications
# MOODLE_EMAIL=admin@your-domain.com
# MOODLE_EMAIL_HOST=smtp.your-provider.com
# MOODLE_EMAIL_PORT=587
# MOODLE_EMAIL_USER=your-smtp-user
# MOODLE_EMAIL_PASSWORD=your-smtp-password

# ===================================================================
#  DEVELOPMENT/DEBUG SETTINGS
# ===================================================================

# Debug Mode (DEVELOPMENT ONLY!)
MOODLE_DEBUG=no

#  DEVELOPMENT: Enable for debugging
# MOODLE_DEBUG=yes

# ===================================================================
#  NOTES
# ===================================================================

# 1.  NEVER use empty passwords in production!
# 2.  Always use HTTPS in production environments
# 3.  Configure firewall rules for database ports
# 4.  Set up regular backups for production
# 5.  Monitor resource usage and scale as needed
# 6.  Keep Docker images updated regularly

# ===================================================================
#  QUICK SETUP COMMANDS
# ===================================================================

# Development Setup:
# 1. cp .env.example .env
# 2. docker-compose up -d
# 3. Wait 5-10 minutes for initialization
# 4. Access: http://localhost:8080

# Production Setup:
# 1. cp .env.example .env
# 2. Edit .env with secure passwords
# 3. Set up reverse proxy (Nginx/Apache)
# 4. Configure SSL certificates
# 5. docker-compose up -d
